- name: "custom POST mutation creating movies gets body filled from variables"
  gqlquery: |
    mutation createMovies($movs: [MovieInput!]) {
      createMyFavouriteMovies(input: $movs) {
        id
        name
        director {
          id
          name
        }
      }
    }
  variables: |
    {
      "movs": [
        { "name": "Mov1", "director": [ { "name": "Dir1" } ] },
        { "name": "Mov2" }
      ]
    }
  httpresponse: |
    {
	"data": {
		"__schema": {
		  "queryType": {
			"name": "Query"
		  },
		  "mutationType": null,
		  "subscriptionType": null,
		  "types": [
			{
			  "kind": "OBJECT",
			  "name": "Query",
			  "fields": [
				{
					"name": "country",
					"args": [
					  {
						"name": "code",
						"type": {
						  "kind": "NON_NULL",
						  "name": null,
						  "ofType": {
							"kind": "SCALAR",
							"name": "ID",
							"ofType": null
						  }
						},
						"defaultValue": null
					  }
					],
					"type": {
					  "kind": "LIST",
					  "name": null,
					  "ofType": {
					  	"kind": "OBJECT",
					  	"name": "Country",
					  	"ofType": null
					  }
					},
					"isDeprecated": false,
					"deprecationReason": null
				  }
			  ]
			}]
		  }
	   }
	}
  url: http://myapi.com/favMovies
  method: POST
  body: |
    {
      "movies": [
        { "name": "Mov1", "director": [ { "name": "Dir1" } ] },
        { "name": "Mov2" }
      ]
    }
  headers: { "X-App-Token": ["val"], "Auth0-Token": ["tok"] }
  resolvedresponse: |
    {
      "createMyFavouriteMovies": [
        {
          "id": "0x1",
          "name": "Mov1",
          "director": [
            {
              "id": "0x2",
              "name": "Dir1"
            }
          ]
        },
        {
          "id": "0x3",
          "name": "Mov2",
          "director": []
        }
      ]
    }

- name: "custom PATCH mutation updating movies gets url & body filled from variables"
  gqlquery: |
    mutation updateMovies($id: ID!, $mov: MovieInput!) {
      updateMyFavouriteMovie(id: $id, input: $mov) {
        id
        name
        director {
          id
          name
        }
      }
    }
  variables: |
    {
      "id": "0x01",
      "mov": {
        "name": "Mov1",
        "director": [ { "name": "Dir1" } ]
      }
    }
  httpresponse: |
    {
      "updateMyFavouriteMovie": {
        "id": "0x1",
        "name": "Mov1",
        "director": [
          {
            "id": "0x2",
            "name": "Dir1"
          }
        ]
      }
    }
  url: http://myapi.com/favMovies/0x01
  method: PATCH
  body: |
    {
      "movie": {
        "name": "Mov1",
        "director": [ { "name": "Dir1" } ]
      }
    }
  resolvedresponse: |
    {
      "updateMyFavouriteMovie": {
        "id": "0x1",
        "name": "Mov1",
        "director": [
          {
            "id": "0x2",
            "name": "Dir1"
          }
        ]
      }
    }

- name: "custom DELETE mutation deleting movie, gets url filled from variables"
  gqlquery: |
    mutation deleteMovie($id: ID!) {
      deleteMyFavouriteMovie(id: $id) {
        id
        name
        director {
          id
          name
        }
      }
    }
  variables: |
    {
      "id": "0x01"
    }
  httpresponse: |
    {
      "deleteMyFavouriteMovie": {
        "id": "0x1",
        "name": "Mov1",
        "director": [
          {
            "id": "0x2",
            "name": "Dir1"
          }
        ]
      }
    }
  url: http://myapi.com/favMovies/0x01
  method: DELETE
  resolvedresponse: |
    {
      "deleteMyFavouriteMovie": {
        "id": "0x1",
        "name": "Mov1",
        "director": [
          {
            "id": "0x2",
            "name": "Dir1"
          }
        ]
      }
    }
