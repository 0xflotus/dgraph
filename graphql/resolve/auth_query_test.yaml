- name: "Top-level auth no filter"
  gqlquery: |
    query {
      queryTodo {
        title
      }
    }
  dgquery: |-
    query {
      queryTodo(func: uid(Todo1)) @filter(uid(Todo2)) {
        title : Todo.title
        dgraph.uid : uid
      }
      Todo1 as var(func: type(Todo))
      Todo2 as var(func: uid(Todo1)) @cascade {
        owner : Todo.owner @filter(eq(User.username, "user1"))
        dgraph.uid : uid
      }
    }

- name: "Deep auth query no filter"
  gqlquery: |
    query {
      queryUser {
        username
        todos {
          title
        }
      }
    }
  dgquery: |-
    query {
      queryUser(func: type(User)) {
        username : User.username
        todos : User.todos @filter(uid(Todo1)) {
          title : Todo.title
          dgraph.uid : uid
        }
        dgraph.uid : uid
      }
      Todo1 as var(func: type(Todo)) @cascade {
        owner : Todo.owner @filter(eq(User.username, "user1"))
        dgraph.uid : uid
      }
    }
